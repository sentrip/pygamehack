name: Build and upload to PyPI

on: [push]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.7]

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update CMake
        uses: jwlawson/actions-setup-cmake@v1.10

      - name: Prepare MSVC
        uses: ilammy/msvc-dev-cmd@v1.9.0
        with:
          toolset: 14.0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
          pip install -r requirements.txt

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update CMake
        uses: jwlawson/actions-setup-cmake@v1.10

      - name: Prepare MSVC
        uses: ilammy/msvc-dev-cmd@v1.9.0
        with:
          toolset: 14.0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
          pip install -r requirements.txt

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: sentrip
          password: ${{ secrets.pypi_password }}
